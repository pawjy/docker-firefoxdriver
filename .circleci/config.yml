{
   "jobs" : {
      "build" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/build"
         },
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "docker info"
               }
            },
            {
               "run" : {
                  "command" : "docker build -t quay.io/wakaba/firefoxdriver:stable stable"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/build"
               }
            },
            {
               "run" : {
                  "command" : "mkdir -p .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/"
               }
            },
            {
               "run" : {
                  "command" : "docker save -o .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/stable.tar quay.io/wakaba/firefoxdriver:stable"
               }
            },
            {
               "persist_to_workspace" : {
                  "paths" : [
                     ".ciconfigtemp"
                  ],
                  "root" : "./"
               }
            }
         ]
      },
      "deploy_master" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/stable.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS quay.io || docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io"
               }
            },
            {
               "deploy" : {
                  "command" : "docker push quay.io/wakaba/firefoxdriver:stable"
               }
            },
            {
               "deploy" : {
                  "command" : "curl -sSf $BWALLER_URL | BWALL_GROUP=docker BWALL_NAME=quay.io/wakaba/firefoxdriver:stable bash"
               }
            }
         ]
      },
      "deploy_nightly" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/stable.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "git fetch --unshallow origin master || git fetch origin master\u000Agit checkout master || git checkout -b master origin/master\u000Agit merge -m \u0022auto-merge $CIRCLE_BRANCH ($CIRCLE_SHA1) into master\u0022 $CIRCLE_SHA1\u000Agit push origin master\u000Acurl -sSf $BWALLER_URL | BWALL_GROUP=merger.$CIRCLE_BRANCH BWALL_NAME=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME bash"
               }
            }
         ]
      },
      "deploy_staging" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/stable.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "git fetch --unshallow origin master || git fetch origin master\u000Agit checkout master || git checkout -b master origin/master\u000Agit merge -m \u0022auto-merge $CIRCLE_BRANCH ($CIRCLE_SHA1) into master\u0022 $CIRCLE_SHA1\u000Agit push origin master\u000Acurl -sSf $BWALLER_URL | BWALL_GROUP=merger.$CIRCLE_BRANCH BWALL_NAME=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME bash"
               }
            }
         ]
      },
      "gaa4" : {
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "git config --global user.email \u0022temp@circleci.test\u0022;git config --global user.name \u0022CircleCI\u0022"
               }
            },
            {
               "run" : {
                  "command" : "make deps"
               }
            },
            {
               "run" : {
                  "command" : "make updatenightly"
               }
            },
            {
               "deploy" : {
                  "command" : "git diff-index --quiet HEAD --cached || git commit -m auto"
               }
            },
            {
               "deploy" : {
                  "command" : "git push origin \u002B`git rev-parse HEAD`:refs/heads/nightly"
               }
            }
         ]
      },
      "test" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/test"
         },
         "machine" : {
            "image" : "ubuntu-2004:202101-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/firefoxdriver/stable.tar"
               }
            },
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "make test-circleci"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/test"
               }
            }
         ]
      }
   },
   "version" : "2.1",
   "workflows" : {
      "autobuild" : {
         "jobs" : [
            "build",
            {
               "test" : {
                  "requires" : [
                     "build"
                  ]
               }
            },
            {
               "deploy_master" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            }
         ],
         "triggers" : [
            {
               "schedule" : {
                  "cron" : "44 22 * * *",
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "master"
                        ]
                     }
                  }
               }
            }
         ]
      },
      "build" : {
         "jobs" : [
            {
               "build" : {
               }
            },
            {
               "test" : {
                  "requires" : [
                     "build"
                  ]
               }
            },
            {
               "deploy_master" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "master"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            },
            {
               "deploy_nightly" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "nightly"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            },
            {
               "deploy_staging" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "staging"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            }
         ]
      },
      "gaa4" : {
         "jobs" : [
            "gaa4"
         ],
         "triggers" : [
            {
               "schedule" : {
                  "cron" : "32 11 * * *",
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "master"
                        ]
                     }
                  }
               }
            }
         ]
      },
      "version" : 2
   }
}
